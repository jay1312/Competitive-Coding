#include<bits/stdc++.h>
using namespace std;
long long int a[1010],n,dp[1010][1010];
long long  fun(int i,int j)
{
	int s1,x1;
	
	if(i>j)
	return 0;
	if(i==j)
	{
		dp[i][j]=a[i];
		return a[i];
	}
	if(dp[i][j]!=-1)
	return dp[i][j];
	
	if(a[i+1]>=a[j])
	s1=a[i]+fun(i+2,j);
	else if(a[i+1]<a[j])
	s1 = a[i]+fun(i+1,j-1);

	if(a[i]>=a[j-1])
	x1= a[j]+fun(i+1,j-1);
	else if(a[i]<a[j-1])
	x1= a[j]+fun(i,j-2);
	
    dp[i][j]=max(s1,x1);
    
	return dp[i][j];
}
int main()
{
	int i,w=1;
	while(1)
	{
        long long int s=0;
		cin>>n;
		if(n)
		{
			for(i=0;i<n;i++)
			{
			cin>>a[i];
			s+=a[i];
		    }
		}
		else break;
			memset(dp,-1,sizeof dp);
		//cout<<s<<endl;
		i=0;
		int j=n-1;
		printf("In game %d, the greedy strategy might lose by as many as %lld points.\n",w,2*fun(0,n-1)-s);
	    w++;
	}
	
}
